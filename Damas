import pygame

class damas:
    
    def __init__(self, color, posicion):
        self.color = color
        self.pos = posicion
        
    def __str__(self):
        return "Color:\t\t {0} \nPosicion:\t {1}".format(self.color, self.pos)
    
    def draw(self, screen):
        if self.color == "Negro":
            screen.blit(pygame.image.load("black_circle.png"), self.pos)
        if self.color == "Blanco":
            screen.blit(pygame.image.load("white_circle.png"), self.pos)
    
    def seleccionado(self, casilla, pos_raton):
        if ((self.pos[0] - (casilla/2)) < pos_raton[0] < (self.pos[0] + (casilla/2))) and ((self.pos[1] - (casilla/2)) < pos_raton[1] < (self.pos[1] + (casilla/2))):
            return True
        else:
            return False 
    
    def comprobar(self):
        key=pygame.key.get_pressed()
        
        if key[pygame.K_LEFT]: 
            return (float(self.pos[0] - 86.25), float(self.pos[1]))
        if key[pygame.K_RIGHT]:
            return (float(self.pos[0] + 86.25), float(self.pos[1]))
        if key[pygame.K_UP]:   
            return (float(self.pos[0]), float(self.pos[1] - 86.25))
        if key[pygame.K_DOWN]: 
            return ((float(self.pos[0]), float(self.pos[1] + 86.25)))
    
    def move(self):
        
        key=pygame.key.get_pressed()
        
        if key[pygame.K_LEFT] and (self.pos[0] - 86.25) >30 and (self.pos[0] - 86.25) < 720: 
            self.pos = (self.pos[0] - 86.25, self.pos[1])
        if key[pygame.K_RIGHT] and (self.pos[0] + 86.25) > 30 and (self.pos[0] + 86.25) < 720:
            self.pos = (self.pos[0] + 86.25, self.pos[1])
        if key[pygame.K_UP]and (self.pos[1] - 86.25) > 30 and (self.pos[1] - 86.25) < 720:   
            self.pos = (self.pos[0], self.pos[1] - 86.25)
        if key[pygame.K_DOWN]and (self.pos[1] + 86.25) > 30 and (self.pos[1] + 86.25) < 720: 
                self.pos = (self.pos[0], self.pos[1] + 86.25)

    

            


#Colores
color = [(96,96,96),(255,204,153),(255, 255, 255), (241, 144, 86)]  #Gris, Marrón, Blanco, Naranja

#Tamaños
pantalla_size = (750, 750)
borde_size = 30
n_casillas = 8
casillas_size = (pantalla_size[0]-(2*borde_size))/n_casillas

#Eje
eje_y = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']

#Tablero
def crear_tablero(pantalla):
    
    color = [(96,96,96),(255,204,153),(255, 255, 255)]  #Gris, Marrón, Blanco
    pantalla_size = (750, 750)  #DIMENCIONES
    borde_size = 30
    n_casillas = 8
    casillas_size = (pantalla_size[0]-(2*borde_size))/n_casillas
    
    count = 0
    for i in range(n_casillas):               #Columnas 
        for j in range(n_casillas):         #Filas 
            x = i * casillas_size + 30
            y = j * casillas_size + 30
            if count % 2 == 0:              #Dividir entre pares e impares para colorear
                pygame.draw.rect(pantalla, color[0], [x, y, casillas_size, casillas_size])
            else: 
                pygame.draw.rect(pantalla, color[1], [x, y, casillas_size, casillas_size])
            count += 1                      #Count para filas
        count +=1                           #Count para columnas 
            
        fuente = pygame.font.Font(None, 30)
        pantalla.blit(fuente.render(eje_y[i],1,color[0]), [i * casillas_size + borde_size * 2, borde_size-20])
        pantalla.blit(fuente.render(str(i+1),1,color[0]), [borde_size -20, i * casillas_size + borde_size*2])

#Posicion
def posicion(mouse, actual):
    n_casillas = 8
    casillas_size = (pantalla_size[0]-(2*borde_size))/n_casillas
    
    xr = mouse[0]
    yr = mouse[1]
    for i in range(n_casillas):
        for j in range(n_casillas):
            x = i * casillas_size + borde_size
            y = j * casillas_size + borde_size
            if (xr >= x) and (xr <= x + casillas_size) and (yr >= y) and (yr <= y + casillas_size):
                actual = [eje_y[i], j + 1]
    return actual

def BuscarLlave(diccionario, localizacion):
    for name, loc in diccionario.items():
        if loc == localizacion:
            return name

def mydama(lista, posicion):
    for i in lista:
        if (i.pos == posicion):
            return i

            
def main():
    pygame.init()

    pantalla = pygame.display.set_mode(pantalla_size)
    pygame.display.set_caption("PyDamas")

    game_over = False 
    
    seleccion = ["A","1"]
    
    damas_blancas = ["A1","C1","E1","G1","B2","D2","F2","H2","A3","C3","E3","G3"]
    damas_negras = ["B6","D6","F6","H6","A7","C7","E7","G7","B8","D8","F8","H8"]

    dic_pos = {"A1":(46.25,46.25),"C1":(218.75,46.25),"E1":(391.25,46.25), "G1":(563.75,46.25),
                       "B2":(132.5,132.5),"D2":(305,132.5),"F2":(477.5,132.5),"H2":(650,132.5),"A3":(46.25,218.75),
                       "C3":(218.75,218.75),"E3":(391.25,218.75),"G3":(563.75,218.75), "B4":(132.5,305), "D4": (305,305), 
                       "F4": (477.5,305),"H4":(650,305),"A5":(46.25,391.25),"C5":(218.75,391.25), "E5":(391.25,391.25),
                       "G5":(563.75,391.25),"H8":(650,650),"F8":(477.5,650),"D8":(305,650),"B8":(132.5,650),"G7":(563.75,563.75),
                       "E7":(391.25,563.75),"C7":(218.75,563.75),"A7":(46.25,563.75),"H6":(650,477.5),"F6":(477.5,477.5),
                       "D6":(305,477.5),"B6":(132.5,477.5)}       
    
    damas_tablero=[]
    
    for i in damas_blancas:
        damas_tablero.append(damas("Blanco",dic_pos[i]))
    for i in damas_negras:
        damas_tablero.append(damas("Negro",dic_pos[i]))
   
    
    #posiciones_prueb = []
    #for i in damas_tablero:
      #      posiciones_prueb.append(i.pos)
    
    count = 0
    while game_over is False:
        for evento in pygame.event.get():
            if evento.type == pygame.QUIT:
                game_over = True

        botones = pygame.mouse.get_pos()
        
        if botones[0]:
            pos = pygame.mouse.get_pos()
            seleccion = posicion(pos, seleccion)
            
        pantalla.fill(color[2])
        
        crear_tablero(pantalla)
        pygame.draw.rect(pantalla, color[3],[(eje_y.index(str(seleccion[0])) * casillas_size + borde_size),((int(seleccion[1])-1) * casillas_size + borde_size), casillas_size, casillas_size])
        fuente = pygame.font.Font(None, 30)
        pantalla.blit(fuente.render(str(seleccion),1,color[0]), [375,725])
        
        posiciones_prueb = []
        
        for i in damas_tablero:
            posiciones_prueb.append(i.pos)

        
        for i in damas_tablero:
            i.draw(pantalla)
            
            if damas.seleccionado(i, casillas_size, pygame.mouse.get_pos()) == True:
                  
                
                if i.comprobar() in posiciones_prueb:
                    del damas_tablero[damas_tablero.index(mydama(damas_tablero,i.comprobar()))]
                    del posiciones_prueb[posiciones_prueb.index(i.comprobar())]
                    
                    
                damas.move(i)
                    
                i.draw(pantalla)
            
            
        pygame.display.flip()
        
    pygame.quit()


if __name__ == "__main__": 
    main()


    
